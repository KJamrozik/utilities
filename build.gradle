// Author: Konrad Jamrozik, github.com/konrad-jamrozik


import org.gradle.api.tasks.testing.logging.TestLoggingContainer

group 'com.github.konrad-jamrozik'
version 'dev'

buildscript {

  ext.kotlin_version = '1.0.1-2'

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'groovy'
apply plugin: 'kotlin'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: tasks.classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
  from sourceSets.test.allSource
}

task groovydocJar(type: Jar, dependsOn: tasks.groovydoc) {
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives groovydocJar
}

dependencies {

  compile 'org.codehaus.groovy:groovy-all:2.4.6'
  compile 'commons-io:commons-io:2.4'
  compile 'com.google.jimfs:jimfs:1.0'

  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  
  testCompile group: 'junit', name: 'junit', version: '4.12'

  File resDir = sourceSets.test.resources.srcDirs.first()
  File subdir = new File(resDir, "subdir")
  File fixtureZip = resDir.listFiles().find { it.name == "_fixture.zip" }
  testRuntime files(fixtureZip)
  testRuntime files(subdir)
}

task debug {
  doLast {
    // Reference: https://discuss.gradle.org/t/how-to-get-a-complete-list-of-all-artifacts-generated-by-a-build/4492
//    println "Archives Artifacts: " + configurations.archives.allArtifacts
//    println project.buildDir
    sourceSets.test.runtimeClasspath.each { println it }
  }
}

tasks.withType(Test) { Test it ->
  it.testLogging { TestLoggingContainer tl ->
    tl.events 'failed', 'skipped'
    // showStandardStreams = true
  }
}

task testi(type: Test, dependsOn: tasks.testClasses) { Test it ->
  it.outputs.upToDateWhen {false}
  it.include '**/*ResourcePathTest*'
}

apply from: file("log.gradle")
